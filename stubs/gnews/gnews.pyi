from _typeshed import Incomplete
from gnews.utils.constants import (
    AVAILABLE_COUNTRIES as AVAILABLE_COUNTRIES,
    AVAILABLE_LANGUAGES as AVAILABLE_LANGUAGES,
    BASE_URL as BASE_URL,
    TOPICS as TOPICS,
    USER_AGENT as USER_AGENT,
)
from gnews.utils.utils import (
    connect_database as connect_database,
    post_database as post_database,
    process_url as process_url,
)

logger: Incomplete

class GNews:
    countries: Incomplete
    languages: Incomplete
    def __init__(
        self,
        language: str = "en",
        country: str | None = "US",
        max_results: int = 100,
        period: Incomplete | None = None,
        start_date: Incomplete | None = None,
        end_date: Incomplete | None = None,
        exclude_websites: Incomplete | None = None,
        proxy: Incomplete | None = None,
    ) -> None: ...
    @property
    def language(self): ...
    @language.setter
    def language(self, language) -> None: ...
    @property
    def exclude_websites(self): ...
    @exclude_websites.setter
    def exclude_websites(self, exclude_websites) -> None: ...
    @property
    def max_results(self): ...
    @max_results.setter
    def max_results(self, size) -> None: ...
    @property
    def period(self): ...
    @period.setter
    def period(self, period) -> None: ...
    @property
    def start_date(self): ...
    @start_date.setter
    def start_date(self, start_date) -> None: ...
    @property
    def end_date(self): ...
    @end_date.setter
    def end_date(self, end_date) -> None: ...
    @property
    def country(self): ...
    @country.setter
    def country(self, country) -> None: ...
    def get_full_article(self, url): ...
    def docstring_parameter(*sub): ...
    indent: str
    indent2: Incomplete
    standard_output: Incomplete
    def get_news(self, key): ...
    def get_top_news(self): ...
    def get_news_by_topic(self, topic: str): ...
    def get_news_by_location(self, location: str): ...
    def get_news_by_site(self, site: str): ...
    def store_in_mongodb(self, news) -> None: ...

fail_fast: true
exclude: '^tests/data/'
repos:
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.4.0
  hooks:
    - id: check-ast   # checks Python syntax
    - id: check-json  # checks JSON syntax
    - id: check-merge-conflict  # checks for no merge conflict strings
    - id: check-shebang-scripts-are-executable  # checks all shell scripts have executable permissions
    - id: check-toml  # checks TOML syntax
    - id: check-yaml  # checks YAML syntax
    - id: end-of-file-fixer  # checks there is a newline at the end of the file
    - id: mixed-line-ending  # normalizes line endings
    - id: no-commit-to-branch  # prevents committing to main
    - id: trailing-whitespace  # trims trailing whitespace
      args: [--markdown-linebreak-ext=md]

- repo: https://github.com/psf/black
  rev: 23.9.1
  hooks:
  - id: black-jupyter
    args:
      - "--preview"

- repo: https://github.com/astral-sh/ruff-pre-commit
  rev: v0.0.290
  hooks:
  - id: ruff

- repo: https://github.com/codespell-project/codespell
  rev: v2.2.5
  hooks:
  - id: codespell
    args: ['--ignore-words=.codespell-dictionary.txt']
    exclude: >
            (?x)^(
                .*\.json|
                .*\.pyc|
                .*\.lock|
                .*\.html|
                .*/stopwords.*\.txt|
                tests/data/.*|
                newspaper/languages.py|
                newspaper/languages/.*|
                newspaper/resources/.*
            )$
    additional_dependencies:
      - tomli

- repo: local
  hooks:
  - id: update-requirements-txt
    name: update-requirements-txt
    description: 'Generate requirements.txt based on poetry.lock'
    entry: poetry
    args: [export, --without-hashes, --without, dev, --without-urls, --format, requirements.txt, --output, requirements_poetry.txt]
    language: system
    pass_filenames: false
